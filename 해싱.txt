컨테이너에 객체와 객체와 연관된키를 저장시 키/객체 쌍이 키 순서로 정렬되진 않는다.]\
따라서 키 값을 이용해 메모리에 원소들의 위치를 정하는 어떤 방식이 존재해야한다. 
문자열 같은 객체를 키로 사용 시 발생하는 문제는 무한대의 문제이다.-> 인덱스 범위 넘어섬
그럼 인덱스범위를 사용범위에 둘라면 해싱이라는 방법이 필요하다
문자열을 어떤 과정을 거쳐서 특정 정숫값을 반환(0이상)
근데 무한대의 문제를 해결하기위해서 해싱방법을 쓰면 컬리젼이 발생한다.(중복을 다룰수 있는 방법이 필요)

해싱이 컨테이너에 객체를 저장하는 용도로만 쓰이는 것은 아니다.

functional 헤더에 hash<K> 템플릿의 특수화가 정의된다. 
hash<K> 템플릿에 정의된 함수 객체 타입은 타입 K객체의 해시 값을 생성한다.
hash<K> 인스턴스의 operator( )멤버는 타입 K만 인수로 받아서 해시 값을 size_t 반환
1. 입셉션 금지 2. 키가같으면 해시값도 일치 3. 컬리젼 가능성은 매우 작아야함.